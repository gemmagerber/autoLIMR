% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geweke_diag.R
\name{geweke_diag}
\alias{geweke_diag}
\title{geweke_diag(): Geweke (1992) convergence diagnostic.}
\usage{
geweke_diag(x, flow = NULL, ...)
}
\arguments{
\item{x}{Object of class "multi_net_output" generated from
autoLIMR::multi_net() function.}

\item{flow}{Character argument. By default, flow = NULL, and the convergence
diagnostics are returned for each Markov Chain variable. If convergence
diagnostics are required for one Markov chain variable only,
it can be specified as a character string e.g., flow = "Plant_GPP".
We suggest leaving the default flow = NULL.}

\item{...}{Other arguments from coda::geweke.diag. Check defaults in
the coda package.}
}
\value{
Data frame with each row corresponding to one Markov chain variable
object, and three columns describing:
1) Geweke Diagnostic "geweke.diag":
Z-scores for a test of equality of means between first and least part of
chain,
2) fraction to use from beginning of chain, and
3) fraction to use from end of chain.
For more information, see coda package.
}
\description{
A function to calculate Geweke (1992) convergence diagnostic
for autoLIMR Markov chains. Based on coda::geweke.diag() function
(Plummer et al., 2020).
}
\examples{
# Geweke diagnostic of variables in object "multi_net_output"
# generated from autoLIMR::multi_net().
# The example LIM Declaration files can be found in the package folder
# "example_limfiles". If using a custom LIM Declaration file, users can
# save the LIM Declaration file in the working directory and refer directly
# within the function e.g., file = "mylimfile.R".
# If the LIM Declaration file is not saved in the
# working directory, the function will accept a valid file path.

fpath <- system.file("example_limfiles",
"Winter_Weighted_Network_LIMfile.R",
package = "autoLIMR")
set.seed(1)
x <- multi_net(
  file = fpath,
  iter = 1000,
  jmp = NULL,
  x0 = NULL)
geweke_diag(x = x)
geweke_diag(x = x, flow = "Plant_GPP")
}
