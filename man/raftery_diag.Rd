% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/raftery_diag.R
\name{raftery_diag}
\alias{raftery_diag}
\title{raftery_diag()}
\usage{
raftery_diag(
  x,
  flow = NULL,
  q = 0.025,
  r = 0.005,
  s = 0.95,
  converge.eps = 0.001,
  ...
)
}
\arguments{
\item{x}{Object of class "multi_net_output" generated from
\code{autoLIMR::multi_net()} function.}

\item{flow}{Character argument. By default, flow = NULL, and the convergence
diagnostics are returned for each Markov Chain variable. If convergence
diagnostics are required for one Markov chain variable only,
it can be specified as a character string e.g., \code{flow = "Plant_GPP"}.
We suggest leaving the default \code{flow = NULL}.}

\item{q}{the quantile to be estimated.}

\item{r}{the desired margin of error of the estimate.}

\item{s}{the probability of obtaining an estimate in the interval (q-r,q+r).}

\item{converge.eps}{Precision required for estimate of time to convergence.}

\item{...}{Other arguments from \code{coda::raftery.diag()}. Check defaults in
the coda package.}
}
\value{
Data frame with each row corresponding to one Markov chain variable,
and columns describing various Raftery Lewis convergence diagnostics:
1) M,
2) N,
3) Nmin,
4) I.
See coda package for further details.
}
\description{
Function to calculate Raftery and Lewisâ€™s
convergence diagnostic for autoLIMR Markov chains.
Based on \code{coda::raftery.diag()} function (Plummer et al., 2020).
}
\details{
If the sample size (i.e., iterations) are too small, the
function returns an error. We suggest keeping the sample size > 4000.
}
\examples{
\donttest{
fpath <- system.file(
  "example_limfiles",
  "Winter_Weighted_Network_LIMfile.R",
  package = "autoLIMR"
)

set.seed(1)
x <- multi_net(
  file = fpath,
  iter = 4000,
  jmp = 0.0001,
  x0 = NULL
)
# raftery_diag(x = x)
raftery_diag(x = x, flow = "Plant_GPP")
}

}
