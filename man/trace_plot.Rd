% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trace_plot.R
\name{trace_plot}
\alias{trace_plot}
\title{trace_plot(): a function to plot an MCMC object variable over time (iterations)
Trace plots can be used to assess the mixing of the MCMC chain over time}
\usage{
trace_plot(x, flow, xranges = FALSE, addtitle = FALSE, ...)
}
\arguments{
\item{x}{The solved MCMC flow values in a data.frame, accessible
from the multi_net() generated list of model outputs ("output") e.g.,
output[["solved.flow.values"]]. Can also refer to the entire multi_net()
output list (class(output) == "multi_net_model).}

\item{flow}{Character argument. The specified name of the flow plot.}

\item{xranges}{Logical argument, default FALSE. If xranges = TRUE, the plot
includes horizontal lines in the trace plot indicating absolute maximum and
minimum values of the flow range calculated by LIM::Xranges.
If xranges = FALSE, the minimum and maximum lines are omitted from the plot.}

\item{addtitle}{Logical argument, defaults to FALSE. If 'addtitles = TRUE',
a title descrbing the type of plot is included above the plot.}

\item{...}{Other base R graphical parameters. See ?plot for more details.}
}
\value{
A trace plot of MCMC variable over time (or number of iterations)
}
\description{
trace_plot(): a function to plot an MCMC object variable over time (iterations)
Trace plots can be used to assess the mixing of the MCMC chain over time
}
\examples{
# Example 1: Traceplot from a data.frame or coda::as.mcmc() object.
# Since this example is not directly from a "multi_net_object" class, the
# flow ranges from the LIM Declaration file cannot be included.

set.seed(1)
x <- data.frame(rnorm(1000, m = 0, s = 1))
colnames(x) <- "Value"
trace_plot(x = x, flow = "Value", xranges = FALSE)

# Example 2: Traceplot from multi_net() function output
# (class "model_class_output"). If so, flow ranges calculated from the
# LIM Declaration file using LIM::Xranges() can be included in the
# trace_plot() function argument.
# The example LIM Declaration files can be found in the package folder
# "example_limfiles". If using a custom LIM Declaration file, users can
# save the LIM Declaration file in the working directory and refer directly
# within the function e.g., file = "mylimfile.R".
# If the LIM Declaration file is not saved in the
# working directory, the function will accept a valid file path.

fpath <- system.file("example_limfiles",
"Winter_Weighted_Network_LIMfile.R",
package = "autoLIMR")
set.seed(1)
x <- multi_net(
  file = fpath,
  iter = 1000,
  jmp = NULL,
  x0 = NULL)
trace_plot(x = x, flow = "Plant_GPP", xranges = TRUE)
trace_plot(x = x, flow = "Plant_GPP", xranges = FALSE)
}
